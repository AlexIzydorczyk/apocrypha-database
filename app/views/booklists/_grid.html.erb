<div class="form-group mb-2">
  <input type="text" id="filter-text-box" placeholder="Filter grid" oninput="onFilterTextBoxChanged()" name="filter">
</div>
<div id="booklists_grid" class="ag-theme-alpine" style="height: 75vh; width:100%;"></div>

<% booklists.each do |booklist| %>
  <%= button_to "Delete", booklist_path(booklist), method: :delete, class: "d-none", id: 'delete_'+booklist.id.to_s %>
<% end %>

<%= render 'booklists/modals/change_person', booklist: booklists.first, reference_type: "library_owner" %>
<%= render 'booklists/modals/change_person', booklist: booklists.first, reference_type: "scribe" %>
<%= render 'booklists/modals/change_institution', booklist: booklists.first %>
<%= render 'booklists/modals/change_location', booklist: booklists.first %>
<%= render 'booklists/modals/change_religious_order', booklist: booklists.first %>
<%= render 'locations/modals/form_from_grid', location: Location.first %>
<%= render 'institutions/modals/form_from_grid', institution: Institution.first %>
<%= render 'religious_orders/modals/form_from_grid', religious_order: ReligiousOrder.first %>
<%= render 'people/modals/form_from_grid', person: Person.first, reference_type: "library_owner" %>
<%= render 'people/modals/form_from_grid', person: Person.first, reference_type: "scribe" %>
<%= render 'layouts/grid_modal_js' %>

<script type="text/javascript" charset="utf-8">

  const defaultColDef = {editable: true , sortable: true, filter: true,  resizable: true, flex: 1};

  const columnDefs = [
        { headerName: "Booklist no.", field: "booklist_no", comparator: numberSort },
        { headerName: "Type of booklist", field: "booklist_type", cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Booklist.all.pluck(:booklist_type).uniq.select{ |t| t.present? }.to_json.html_safe %> }},
        { headerName: "Language", field: "language_id", hide: true },

        { headerName: "Library owner", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Id", field: "library_owner_id", hide: true, editable: false, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("people/${params.value}", "person", "library_owner")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('booklists/${params.data.id}', 'booklist', 'library_owner')"><i class='fa-solid fa-arrows-repeat'></i></button>`
            } },
          <% end %>
          { headerName: "First name", field: "library_owner_first_name", hide: true, editable: false },
          { headerName: "Last name", field: "library_owner_last_name", hide: true, editable: false },
        ] },

        { headerName: "Institution", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Id", field: "institution_id", hide: true, editable: false, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("institutions/${params.value}", "institution")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('booklists/${params.data.id}', 'booklist', 'institution')"><i class='fa-solid fa-arrows-repeat'></i></button>`
            } },
          <% end %>
          { headerName: "Names", field: "institution_name", hide: true, editable: false },
        ] },

        { headerName: "Religious order", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Id", field: "religious_order_id", hide: true, editable: false, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("religious_orders/${params.value}", "religious_order")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('booklists/${params.data.id}', 'booklist', 'religious_order')"><i class='fa-solid fa-arrows-repeat'></i></button>`
            } },
          <% end %>
          { headerName: "Name", field: "religious_order_name", hide: true, editable: false },
          { headerName: "Abbreviation", field: "religious_order_abbreviation", hide: true, editable: false },
        ] },
        
        { headerName: "Location", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Id", field: "location_id", hide: true, editable: false, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("locations/${params.value}", "location")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('booklists/${params.data.id}', 'booklist', 'location')"><i class='fa-solid fa-arrows-repeat'></i></button>`
            } },
          <% end %>
          { headerName: "City", field: "city", editable: false, hide: true},
          { headerName: "City (alternative)", field: "city_alt", editable: false, hide: true},
          { headerName: "Diocese", field: "diocese", editable: false, hide: true},
          { headerName: "Diocese (alternative)", hide: true, field: "diocese_alt", editable: false},
          { headerName: "Region", field: "region", editable: false, hide: true},
          { headerName: "Region (alternative)", hide: true, field: "region_alt", editable: false},
          { headerName: "Country", field: "country", editable: false, hide: true},
        ] },

        { headerName: "Scribe", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Id", field: "scribe_id", hide: true, editable: false, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("people/${params.value}", "person", "scribe")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('booklists/${params.data.id}', 'booklist', 'scribe')"><i class='fa-solid fa-arrows-repeat'></i></button>`
            } },
          <% end %>
          { headerName: "First name", field: "scribe_first_name", hide: true, editable: false },
          { headerName: "Last name", field: "scribe_last_name", hide: true, editable: false },
        ] },
        { headerName: "Date from", field: "date_from", hide: true, comparator: numberSort },
        { headerName: "Date to", field: "date_to", hide: true, comparator: numberSort },
        { headerName: "Specific date", field: "specific_date", hide: true, comparator: numberSort },
        { headerName: "Title orig", field: "title_orig"},
        { headerName: "Title orig transliteration", field: "title_orig_transliteration", hide: true},
        { headerName: "Title orig translation", field: "title_orig_translation", hide: true},
        { headerName: "Actions", field: "links", editable: false, cellRenderer: function(links) {
      return "<a href='" + links.value.edit + "' class='btn btn-outline-secondary btn-sm' target='_blank'>edit</a><a href='#' onclick='if(confirm(\"Are you sure you want to delete this booklist?\")){$("+'"#'+links.value.delete_btn+'"'+").click()}' class='btn btn-outline-danger btn-sm'>delete</a>"
    } }
  ];

  const rowData = [
    <% booklists.each do |bl| %>
      {
        id: <%= bl.id %>,
        booklist_type: "<%= bl.booklist_type %>",
        booklist_no: "<%= bl.booklist_no.present? ? bl.booklist_no : bl.id %>",
        library_owner_first_name: "<%= bl.library_owner.try(:first_name_vernacular) %>",
        library_owner_last_name: "<%= bl.library_owner.try(:last_name_vernacular) %>",
        library_owner_id: "<%= bl.library_owner_id %>",
        institution_id: "<%= bl.institution_id %>",
        institution_name: "<%= bl.institution.try(:display_name) %>",
        location_id: "<%= bl.location_id %>",
        city: "<%= bl.location.try(:city) %>",
        city_alt: "<%= bl.location.try(:city_alt) %>",
        region: "<%= bl.location.try(:region) %>",
        region_alt: "<%= bl.location.try(:region_alt) %>",
        country: "<%= bl.location.try(:country) %>",
        diocese: "<%= bl.location.try(:diocese) %>",
        diocese_alt: "<%= bl.location.try(:diocese_alt) %>",
        scribe_id: "<%= bl.scribe_id %>",
        scribe_first_name: "<%= bl.scribe.try(:first_name_vernacular) %>",
        scribe_last_name: "<%= bl.scribe.try(:last_name_vernacular) %>",
        language_id: "<%= bl.language_id %>",
        religious_order_id: "<%= bl.religious_order_id %>",
        religious_order_name: "<%= bl.religious_order.try(:order_name) %>",
        religious_order_abbreviation: "<%= bl.religious_order.try(:abbreviation) %>",
        title_orig: "<%= bl.title_orig %>",
        title_orig_transliteration: "<%= bl.title_orig_transliteration %>",
        title_orig_translation: "<%= bl.title_orig_translation %>",
        date_from: "<%= bl.date_from %>",
        date_to: "<%= bl.date_to %>",
        specific_date: "<%= bl.specific_date %>",
        notes: `<%= bl.notes %>`,
        links: { edit: "<%= edit_booklist_path(bl) %>", delete_btn: 'delete_<%= bl.id %>' }
      },
    <% end %>
  ];

  function numberSort(num1, num2){
      return num1 - num2;
    };

  function onFilterTextBoxChanged() {
    gridOptions.api.setQuickFilter(
      document.getElementById('filter-text-box').value
    );
  }

  const gridOptions = {
    columnDefs: columnDefs,
    defaultColDef: defaultColDef,
    rowData: rowData,
    onCellValueChanged: onCellValueChanged,
    sideBar: 'columns',
  };

  function onCellValueChanged(event){
    console.log('cell value changed ', event);
    saveChange(event.data.id, event.data);
  }

  function saveChange(id, data){
    var my_data = {};
    my_data.in_grid = "1";
    my_data.authenticity_token = "<%= form_authenticity_token %>";
    my_data.booklist = data;
    console.log('my_data', my_data);
    $.ajax({
      url: "/booklists/"+id,
      type: 'PUT',
      data: JSON.stringify(my_data),
      contentType: 'application/json',
      success: function(data) {
        console.log('result received:');
        console.log(data);
      }
    });
  };

  const eGridDiv = document.querySelector('#booklists_grid');
  new agGrid.Grid(eGridDiv, gridOptions);

</script>
