<div class="form-group mb-2">
  <input type="text" id="filter-text-box" placeholder="Filter grid" oninput="onFilterTextBoxChanged()" name="filter">
</div>
<div id="booklists_grid" class="ag-theme-alpine" style="height: 75vh; width:100%;"></div>

<% booklists.each do |booklist| %>
  <%= button_to "Delete", booklist_path(booklist), method: :delete, class: "d-none", id: 'delete_'+booklist.id.to_s %>
<% end %>

<script type="text/javascript" charset="utf-8">

  const defaultColDef = {editable: true , sortable: true, filter: true,  resizable: true, flex: 1};

  const columnDefs = [
        { headerName: "Booklist no.", field: "booklist_no", comparator: numberSort },
        { headerName: "Type of booklist", field: "booklist_type", cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Booklist.all.pluck(:booklist_type).uniq.select{ |t| t.present? }.to_json.html_safe %> }},
        { headerName: "Language", field: "language_id", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Language.all.map(&:language_name).to_json.html_safe %> }, valueGetter: languageGetter, valueSetter: languageSetter },
        { headerName: "Library owner", field: "library_owner_id", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Person.all.map(&:full_name).to_json.html_safe %> }, valueGetter: personGetter, valueSetter: personSetter},
        { headerName: "Institution", field: "institution_id", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Institution.pluck(:name).to_json.html_safe %> }, valueGetter: insitutionGetter, valueSetter: insitutionSetter },
        { headerName: "Religious order", field: "religious_order_id", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= ReligiousOrder.all.pluck(:order_name).to_json.html_safe %> }, valueGetter: religiousOrderGetter, valueSetter: religiousOrderSetter  },
        { headerName: "Location", field: "location_id", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Location.all.map(&:city_region_country).to_json.html_safe %> }, valueGetter: locationGetter, valueSetter: locationSetter },
        { headerName: "Author", field: "scribe_id", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: <%= Person.all.map(&:full_name).to_json.html_safe %> }, valueGetter: authorGetter, valueSetter: authorSetter },
        { headerName: "Date from", field: "date_from", hide: true, comparator: numberSort },
        { headerName: "Date to", field: "date_to", hide: true, comparator: numberSort },
        { headerName: "Specific date", field: "specific_date", hide: true, comparator: numberSort },
        { headerName: "Title orig", field: "title_orig"},
        { headerName: "Title orig transliteration", field: "title_orig_transliteration", hide: true},
        { headerName: "Title orig translation", field: "title_orig_translation", hide: true},
        { headerName: "Notes", field: "notes", hide: true},
        { headerName: "Actions", field: "links", editable: false, cellRenderer: function(links) {
      return "<a href='" + links.value.edit + "' class='btn btn-outline-secondary btn-sm' target='_blank'>edit</a><a href='#' onclick='if(confirm(\"Are you sure you want to delete this booklist?\")){$("+'"#'+links.value.delete_btn+'"'+").click()}' class='btn btn-outline-danger btn-sm'>delete</a>"
    } }
  ];

  const rowData = [
    <% booklists.each do |bl| %>
      {
        id: <%= bl.id %>,
        booklist_type: "<%= bl.booklist_type %>",
        booklist_no: "<%= bl.booklist_no.present? ? bl.booklist_no : bl.id %>",
        library_owner_id: "<%= bl.library_owner_id %>",
        institution_id: "<%= bl.institution_id %>",
        location_id: "<%= bl.location_id %>",
        scribe_id: "<%= bl.scribe_id %>",
        language_id: "<%= bl.language_id %>",
        religious_order_id: "<%= bl.religious_order_id %>",
        title_orig: "<%= bl.title_orig %>",
        title_orig_transliteration: "<%= bl.title_orig_transliteration %>",
        title_orig_translation: "<%= bl.title_orig_translation %>",
        date_from: "<%= bl.date_from %>",
        date_to: "<%= bl.date_to %>",
        specific_date: "<%= bl.specific_date %>",
        notes: "<%= bl.notes %>",
        links: { edit: "<%= edit_booklist_path(bl) %>", delete_btn: 'delete_<%= bl.id %>' }
      },
    <% end %>
  ];

  function numberSort(num1, num2){
      return num1 - num2;
    };

  function onFilterTextBoxChanged() {
    gridOptions.api.setQuickFilter(
      document.getElementById('filter-text-box').value
    );
  }

  function personGetter(params) {
    return params.data ? <%= Person.all.map{ |p| [p.id, p.full_name] }.to_h.to_json.html_safe %>[params.data.library_owner_id] : ''
  }
  function personSetter(params) {
    params.data.library_owner_id = <%= Person.all.map{ |p| [p.full_name, p.id] }.to_h.to_json.html_safe %>[params.newValue]
  }
  function insitutionGetter(params) {
    return <%= Institution.pluck(:id, :name).to_h.to_json.html_safe %>[params.data.institution_id]
  }
  function insitutionSetter(params) {
    params.data.institution_id = <%= Institution.pluck(:name, :id).to_h.to_json.html_safe %>[params.newValue]
  }
  function languageGetter(params) {
    return <%= Language.pluck(:id, :language_name).to_h.to_json.html_safe %>[params.data.language_id]
  }
  function languageSetter(params) {
    params.data.language_id = <%= Language.pluck(:language_name, :id).to_h.to_json.html_safe %>[params.newValue]
  }
  function religiousOrderGetter(params) {
    return params.data ? <%= ReligiousOrder.pluck(:id, :order_name).to_h.to_json.html_safe %>[params.data.religious_order_id] : ''
  }
  function religiousOrderSetter(params) {
    params.data.religious_order_id = <%= ReligiousOrder.pluck(:order_name, :id).to_h.to_json.html_safe %>[params.newValue]
  }
  function locationGetter(params) {
    return params.data ? <%= Location.all.map{ |l| [l.id, l.city_region_country] }.to_h.to_json.html_safe %>[params.data.location_id] : ''
  }
  function locationSetter(params) {
    params.data.location_id = <%= Location.all.map{ |l| [l.city_region_country, l.id] }.to_h.to_json.html_safe %>[params.newValue]
  }
  function authorGetter(params) {
    return params.data ? <%= Person.all.map{ |l| [l.id, l.full_name] }.to_h.to_json.html_safe %>[params.data.scribe_id] : ''
  }
  function authorSetter(params) {
    params.data.scribe_id = <%= Person.all.map{ |l| [l.full_name, l.id] }.to_h.to_json.html_safe %>[params.newValue]
  }

  const gridOptions = {
    columnDefs: columnDefs,
    defaultColDef: defaultColDef,
    rowData: rowData,
    onCellValueChanged: onCellValueChanged,
    sideBar: 'columns',
  };

  function onCellValueChanged(event){
    console.log('cell value changed ', event);
    saveChange(event.data.id, event.data);
  }

  function saveChange(id, data){
    var my_data = {};
    my_data.in_grid = "1";
    my_data.authenticity_token = "<%= form_authenticity_token %>";
    my_data.booklist = data;
    console.log('my_data', my_data);
    $.ajax({
      url: "/booklists/"+id,
      type: 'PUT',
      data: JSON.stringify(my_data),
      contentType: 'application/json',
      success: function(data) {
        console.log('result received:');
        console.log(data);
      }
    });
  };

  const eGridDiv = document.querySelector('#booklists_grid');
  new agGrid.Grid(eGridDiv, gridOptions);

</script>
