<div class="form-group mb-2">
  <input type="text" id="filter-text-box" placeholder="Filter grid" oninput="onFilterTextBoxChanged()" name="filter">
</div>
<div id="apocrypha_grid" class="ag-theme-alpine" style="height: 75vh; width:100%;"></div>

<% apocrypha.each do |apocryphon| %>
  <%= button_to "Delete", apocryphon_path(apocryphon), method: :delete, class: "d-none", id: 'delete_'+apocryphon.id.to_s %>
<% end %>

<script type="text/javascript" charset="utf-8">

  const defaultColDef = {editable: true , sortable: true, filter: true,  resizable: true, flex: 1};

  const columnDefs = [
    { headerName: "Apocryphon no", field: "apocryphon_no", comparator: numberSort },
    { headerName: "Standard English Title", field: "main_english_title", editable: false, flex: 2,},
    { headerName: "Standard Latin Title", field: "main_latin_title", editable: false, flex: 2,},
    { headerName: "Other English Titles", field: "other_english_titles", editable: false, flex: 2,},
    { headerName: "Other Latin Titles", field: "other_latin_titles", editable: false, flex: 2,},
    { headerName: "Languages in Apocrypharius", field: "languages_list", editable: false,},
    { headerName: "CANT no.", field: "cant_no", comparator: numberSort },
    { headerName: "BHL no.", field: "bhl_no", hide: true},
    { headerName: "BHG no.", field: "bhg_no", hide: true},
    { headerName: "e-Clavis no.", field: "e_clavis_no", comparator: numberSort },
    { headerName: "Link to e-Clavis", field: "e_clavis_link", hide: true},
    { headerName: "Actions", field: "links", editable: false, cellRenderer: function(links) {
        var eclavis = links.value.eclavis ? "<a href='" + links.value.eclavis + "' target='_blank' class='btn btn-outline-secondary btn-sm'>e-Clavis</a>" : "" ;
        return "<a href='" + links.value.edit + "' class='btn btn-outline-secondary btn-sm' target='_blank'>Edit</a><a href='#' onclick='if(confirm(\"Are you sure you want to delete this apocryphon and all contained titles?\")){$("+'"#'+links.value.delete_btn+'"'+").click()}' class='btn btn-outline-danger btn-sm'>delete</a>" + eclavis
      } 
    }
  ];

  const rowData = [
    <% apocrypha.each do |apocryphon| %>
      { id:<%= apocryphon.id %>,
        apocryphon_no: "<%= apocryphon.apocryphon_no %>",
        main_english_title: "<%= apocryphon.main_eng_title %>",
        main_latin_title: "<%= apocryphon.main_lat_title %>",
        other_english_titles: "<%= Title.where(apocryphon_id: apocryphon.id).where(language_id: english_id).order('title_orig').where.not(id: apocryphon.main_english_title_id).map{ |t| t.title_orig }.join(', ') %>",
        other_latin_titles: "<%= Title.where(apocryphon_id: apocryphon.id).where(language_id: latin_id).order('title_orig').where.not(id: apocryphon.main_latin_title_id).map{ |t| t.title_orig }.join(', ') %>",
        cant_no: "<%= apocryphon.cant_no %>",
        bhl_no: "<%= apocryphon.bhl_no %>",
        bhg_no: "<%= apocryphon.bhg_no %>",
        bho_no: "<%= apocryphon.bho_no %>",
        e_clavis_no: "<%= apocryphon.e_clavis_no %>",
        e_clavis_link: "<%= apocryphon.e_clavis_link %>",
        languages_list: "<%= apocryphon.languages_list %>",
        links: { edit: "<%= edit_apocryphon_path(apocryphon) %>", eclavis: "<%= apocryphon.e_clavis_link %>", delete_btn: 'delete_<%= apocryphon.id %>' },
      },
    <% end %>
  ];

  const gridOptions = {
    columnDefs: columnDefs,
    defaultColDef: defaultColDef,
    rowData: rowData,
    onCellValueChanged: onCellValueChanged,
    sideBar: 'columns',
  };

  function onCellValueChanged(event){
    console.log('cell value changed ', event);
    saveChange(event.data.id, event.data);
  }

  function numberSort(num1, num2){
    return num1 - num2;
  };

  function onFilterTextBoxChanged() {
    gridOptions.api.setQuickFilter(
      document.getElementById('filter-text-box').value
    );
  }

  function saveChange(id, data){
    var my_data = {};
    my_data.in_grid = "1";
    my_data.authenticity_token = "<%= form_authenticity_token %>";
    my_data.apocryphon = data;
    console.log('my_data', my_data);
    $.ajax({
      url: "/apocrypha/"+id,
      type: 'PUT',
      data: JSON.stringify(my_data),
      contentType: 'application/json',
      success: function(data) {
        console.log('result received:');
        console.log(data);
      }
    });
  };

  const eGridDiv = document.querySelector('#apocrypha_grid');
  new agGrid.Grid(eGridDiv, gridOptions);
  gridOptions.columnApi.autoSizeColumns(['apocryphon_no','cant_no','bhl_no','bhg_no','bho_no','e_clavis_no'], true);

</script>
