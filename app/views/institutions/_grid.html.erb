<div class="d-flex mb-2 align-items-end">
  <div class="form-group mb-2">
    <input type="text" id="filter-text-box" placeholder="Filter grid" oninput="onFilterTextBoxChanged()" name="filter">
  </div>
  <button class="btn btn-sm btn-outline-action ms-auto" onclick="resetState()">Reset Grid</button>
</div>
<div id="institutions_grid" class="ag-theme-alpine" style="height: 75vh; width:100%;"></div>

<% institutions.each do |institution| %>
  <%= button_to "Delete", institution_path(institution), method: :delete, class: "d-none", id: 'delete_'+institution.id.to_s %>
<% end %>
<% if user_signed_in? && current_user.adm_editor? %>
  <%= render 'locations/modals/form_from_grid', location: Location.first %>
  <%= render 'institutions/modals/change_location', institution: institutions.first %>
  <%= render 'religious_orders/modals/form_from_grid', religious_order: ReligiousOrder.first %>
  <%= render 'institutions/modals/change_religious_order', institution: institutions.first %>
  <%= render 'layouts/grid_modal_js' %>
<% end %>
<% if user_signed_in? %>
  <%= render 'layouts/grid_save_state_js', record_type: "Institution" %>
<% end %>

<script type="text/javascript" charset="utf-8">

  const defaultColDef = {editable: true , sortable: true, filter: true,  resizable: true, flex: 1};

  const columnDefs = [
        { headerName: "Institution name", children: [
          { headerName: "Name", field: "name", flex: 2},
          { headerName: "Name (alternative)", hide: true, field: "name_alt", flex: 2},
        ]},
        { headerName: "Location", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Location id", field: "location_id", editable: false, hide: true, suppressColumnsToolPanel: true, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("locations/${params.value}", "location")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('institutions/${params.data.id}', 'institution')"><i class='fa-solid fa-arrows-repeat'></i></button>`
              } 
            },
          <% end %>
          { headerName: "City", field: "city", editable: false, flex: 2},
          { headerName: "City (alternative)", field: "city_alt", editable: false, flex: 2, hide: true},
          { headerName: "Diocese", field: "diocese", editable: false, flex: 2},
          { headerName: "Diocese (alternative)", hide: true, field: "diocese_alt", editable: false, flex: 2},
          { headerName: "Region", field: "region", editable: false, flex: 2},
          { headerName: "Region (alternative)", hide: true, field: "region_alt", editable: false, flex: 2},
          { headerName: "Country", field: "country", editable: false, flex: 2},
        ] },
        { headerName: "Religious order", children: [
          <% if user_signed_in? && current_user.adm_editor? %>
            { headerName: "Id", field: "religious_order_id", editable: false, hide: true, suppressColumnsToolPanel: true, cellRenderer: function(params) {
              return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("religious_orders/${params.value}", "religious_order")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('institutions/${params.data.id}', 'institution', 'religious_order')"><i class='fa-solid fa-arrows-repeat'></i></button>`
              } 
            },
          <% end %>
          { headerName: "Name", field: "religious_order_name", editable: false, flex: 2},
          { headerName: "Abbreviation", field: "religious_order_abbr", editable: false, hide: true },
        ]},
        { headerName: "Actions", field: "links", editable: false, suppressColumnsToolPanel: true, cellRenderer: function(links) {
          return "<!-- <a href='" + links.value.edit + "' class='btn btn-outline-secondary btn-sm'>edit</a> --><a href='#' onclick='if(confirm(\"Are you sure you want to delete this object? Note: the object will be unlinked from all parent records.\")){$("+'"#'+links.value.delete_btn+'"'+").click()}' class='btn btn-outline-danger btn-sm'>delete</a>"
          }   
        }
  ];

  const rowData = [
    <% institutions.each do |institution| %>
      {
        id:<%= institution.id %>,
        name_alt: "<%= institution.name_alt.html_safe %>",
        name: "<%= institution.name.html_safe %>",
        name_transliteration: "<%= institution.name_transliteration.html_safe %>",
        location_id: "<%= institution.location.try(:id) %>",
        city: "<%= institution.location.try(:city) %>",
        city_alt: "<%= institution.location.try(:city_alt) %>",
        region: "<%= institution.location.try(:region) %>",
        region_alt: "<%= institution.location.try(:region_alt) %>",
        country: "<%= institution.location.try(:country) %>",
        diocese: "<%= institution.location.try(:diocese) %>",
        diocese_alt: "<%= institution.location.try(:diocese_alt) %>",
        religious_order_id: "<%= institution.religious_order_id %>",
        religious_order_name: "<%= institution.religious_order.try(:order_name) %>",
        religious_order_abbr: "<%= institution.religious_order.try(:abbreviation) %>",
        links: {
          show: "<%= institution_path(institution) %>",
          edit: "<%= edit_institution_path(institution) %>",
          delete_btn: 'delete_<%= institution.id %>'
        },
        location_links: {

        }
      },
    <% end %>
  ];

  const gridOptions = {
    columnDefs: columnDefs,
    defaultColDef: defaultColDef,
    rowData: rowData,
    onCellValueChanged: onCellValueChanged,
    sideBar: 'columns',
    accentedSort: true,
  };

  function onCellValueChanged(event){
    console.log('cell value changed ', event);
    saveChange(event.data.id, event.data);
  }

  function onFilterTextBoxChanged() {
    gridOptions.api.setQuickFilter(
      document.getElementById('filter-text-box').value
    );
  }

  function saveChange(id, data){
    var my_data = {};
    my_data.authenticity_token = "<%= form_authenticity_token %>";
    my_data.institution = data;
    console.log('my_data', my_data);
    $.ajax({
      url: "/institutions/"+id,
      type: 'PUT',
      data: JSON.stringify(my_data),
      contentType: 'application/json',
      success: function(data) {
        console.log('result received:');
        console.log(data);
      }
    });
  };

  const eGridDiv = document.querySelector('#institutions_grid');
  new agGrid.Grid(eGridDiv, gridOptions);
  gridOptions.columnApi.autoSizeColumns(['location_id']);
  autoSizeAll(gridOptions, false)
</script>
