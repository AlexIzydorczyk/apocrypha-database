<div class="form-group mb-2">
  <input type="text" id="filter-text-box" placeholder="Filter grid" oninput="onFilterTextBoxChanged()" name="filter">
</div>
<div id="manuscripts_grid" class="ag-theme-alpine" style="height: 75vh; width:100%;"></div>

<% if user_signed_in? && current_user.adm_editor? %>
  <%= render 'locations/modals/form_from_grid', location: Location.first %>
  <%= render 'manuscripts/modals/change_location', manuscript: manuscripts.first %>
  <%= render 'manuscripts/modals/change_institution', manuscript: manuscripts.first, column: "genesis_institution_id" %>
  <%= render 'manuscripts/modals/change_institution', manuscript: manuscripts.first, column: "institution_id" %>
  <%= render 'institutions/modals/form_from_grid', institution: Institution.first %>
  <%= render 'manuscripts/modals/change_religious_order', manuscript: manuscripts.first %>
  <%= render 'religious_orders/modals/form_from_grid', religious_order: ReligiousOrder.first %>
  <%= render 'manuscripts/modals/change_person', manuscript: manuscripts.first, reference_type: "scribe" %>
  <%= render 'manuscripts/modals/change_person', manuscript: manuscripts.first, reference_type: "correspondent" %>
  <%= render 'manuscripts/modals/change_person', manuscript: manuscripts.first, reference_type: "transcriber" %>
  <%= render 'manuscripts/modals/change_person', manuscript: manuscripts.first, reference_type: "compiler" %>
  <%= render 'layouts/grid_modal_js' %>
<% end %>


<% manuscripts.each do |manuscript| %>
  <%= button_to "Delete", manuscript_path(manuscript), method: :delete, class: "d-none", id: 'delete_'+manuscript.id.to_s %>
<% end %>

<script type="text/javascript" charset="utf-8">

  const defaultColDef = {editable: true , sortable: true, filter: true,  resizable: true, flex: 1};

  const columnDefs = [
    { headerName: "Census no.", field: "census_no", comparator: numberSort },
    { headerName: "Status", field: "status", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: ['extant', 'lost', 'destroyed'] }},

    { headerName: "Repository", children: [
      <% if user_signed_in? && current_user.adm_editor? %>
        { headerName: "Id", field: "institution_id", hide: true, editable: false, cellRenderer: function(params) {
          return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("institutions/${params.value}", "institution")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'institution_id')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } },
      <% end %>
      { headerName: "City", field: "institution_city", editable: false, hide: false },
      { headerName: "City (alternative)", field: "institution_city_alt", editable: false, hide: true },     
      // { headerName: "Region", field: "institution_region", editable: false, hide: true },
      // { headerName: "Region (alternative)", hide: true, field: "institution_region_alt", editable: false},
      { headerName: "Country", field: "institution_country", editable: false, hide: false },
      // { headerName: "Repository", field: "institution_name", flex: 2, hide: false, editable: false },
      // { headerName: "Repository (alternative)", field: "institution_name_alternative", flex: 2, hide: true, editable: false },
    ] },

    { headerName: "Manuscript", children: [
      { headerName: "Shelfmark", field: "shelfmark"},
      { headerName: "Old shelfmarks", field: "old_shelfmark", hide: true },
      { headerName: "Material", field: "material", hide: true, cellEditor: 'agRichSelectCellEditor', cellEditorParams: { values: ["paper", "parchment", "parchment and paper"] } },
      { headerName: "Dimensions", field: "dimensions", hide: true },
      { headerName: "Number of pages/folios", field: "leaf_page_no", hide: true, comparator: numberSort },
      { headerName: "Date from", field: "date_from", hide: true, comparator: numberSort },
      { headerName: "Date to", field: "date_to", hide: true, comparator: numberSort },
      { headerName: "Specific date", field: "specific_date", hide: true, comparator: numberSort },
      { headerName: "Content type", field: "content_type", flex: 2, cellEditor: "agRichSelectCellEditor", cellEditorParams: { values: <%= Manuscript.all.pluck(:content_type).uniq.to_json.html_safe %> } },
      { headerName: "Notes on ms.", field: "notes", hide: true, cellEditor: 'agLargeTextCellEditor' },
      { headerName: "Languages in ms.", field: "languages", hide: true, editable: false },
    ]},      

    { headerName: "Origin: institution", children: [
      <% if user_signed_in? && current_user.adm_editor? %>
        { headerName: "Id", field: "genesis_institution_id", hide: true, editable: false, cellRenderer: function(params) {
          return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("institutions/${params.value}", "institution")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'genesis_institution_id')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } },
      <% end %>
      { headerName: "Name", field: "genesis_institution_name", hide: false, editable: false },
      { headerName: "Name (alternative)", field: "genesis_institution_name_alternative", hide: true, editable: false },
    ] },

    { headerName: "Origin: location", children: [
      { headerName: "Id", field: "genesis_location_id", editable: false, hide: true, cellRenderer: function(params) {
        return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("locations/${params.value}", "location")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } 
      },
      { headerName: "City", field: "city", editable: false, hide: false },
      { headerName: "City (alternative)", field: "city_alt", editable: false, hide: true },
      { headerName: "Diocese", field: "diocese", editable: false, hide: false },
      { headerName: "Diocese (alternative)", hide: true, field: "diocese_alt", editable: false},
      { headerName: "Region", field: "region", editable: false, hide: false },
      { headerName: "Region (alternative)", hide: true, field: "region_alt", editable: false},
      { headerName: "Country", field: "country", editable: false, hide: false },
    ] },

    { headerName: "Origin: religious order", children: [
      <% if user_signed_in? && current_user.adm_editor? %>
        { headerName: "Id", field: "religious_order_id", hide: true, editable: false, cellRenderer: function(params) {
          return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick='openModal("religious_orders/${params.value}", "religious_order")' ${params.value ? "" : "disabled='true'"}><i class='fa-solid fa-pencil'></i></button><button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'religious_order')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } },
      <% end %>
      { headerName: "Name", field: "religious_order_name", hide: false, editable: false },
      // { headerName: "Abbreviation", field: "religious_order_abbreviation", hide: true, editable: false },
    ] },

    // { headerName: "Origin: scribe(s)", children: [
    //   <% if user_signed_in? && current_user.adm_editor? %>
    //     { headerName: "Ids", field: "scribe_ids", hide: true, editable: false, cellRenderer: function(params) {
    //       return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'scribe')"><i class='fa-solid fa-arrows-repeat'></i></button>`
    //     } },
    //   <% end %>
    //   { headerName: "Names", field: "scribe_names", hide: true, editable: false },
    // ] },

    { headerName: "Correspondent", children: [
      <% if user_signed_in? && current_user.adm_editor? %>
        { headerName: "Ids", field: "correspondent_ids", hide: true, editable: false, cellRenderer: function(params) {
          return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'correspondent')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } },
      <% end %>
      { headerName: "Name(s)", field: "correspondent_names", hide: false, editable: false },
    ] },

    { headerName: "Transcribed by", children: [
      <% if user_signed_in? && current_user.adm_editor? %>
        { headerName: "Ids", field: "transcriber_ids", hide: true, editable: false, cellRenderer: function(params) {
          return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'transcriber')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } },
      <% end %>
      { headerName: "Name(s)", field: "transcriber_names", hide: false, editable: false },
    ] },

    { headerName: "Compiles by", children: [
      <% if user_signed_in? && current_user.adm_editor? %>
        { headerName: "Ids", field: "compiler_ids", hide: true, editable: false, cellRenderer: function(params) {
          return `${params.value} <button type='button' class='btn btn-outline-secondary btn-sm float-end' onclick="openModal('manuscripts/${params.data.id}', 'manuscript', 'compiler')"><i class='fa-solid fa-arrows-repeat'></i></button>`
        } },
      <% end %>
      { headerName: "Name(s)", field: "compiler_names", hide: false, editable: false },
    ] },

    { headerName: "Actions", field: "links", editable: false, suppressColumnsToolPanel: true, cellRenderer: function(links) {
      return "<a href='" + links.value.edit + "' class='btn btn-outline-secondary btn-sm' target='_blank'>edit</a><a href='#' onclick='if(confirm(\"Are you sure you want to delete this manuscript and all contents including ownerships, booklets, and contents?\")){$("+'"#'+links.value.delete_btn+'"'+").click()}' class='btn btn-outline-danger btn-sm'>delete</a>"
    } }
    ];

    function insitutionGetter(params) {
      return <%= Institution.pluck(:id, :name).to_h.to_json.html_safe %>[params.data.institution_id]
    }
    function insitutionSetter(params) {
      params.data.institution_id = <%= Institution.pluck(:name, :id).to_h.to_json.html_safe %>[params.newValue]
    }

    const rowData = [
    <% manuscripts.each do |manuscript| %>
    { id:<%= manuscript.id %>,
      identifier: "<%= manuscript.identifier %>",census_no: "<%= manuscript.census_no %>",status: "<%= manuscript.status %>",

      institution_id: "<%= manuscript.institution_id %>",
      institution_name: "<%= manuscript.institution.try(:display_name) %>",
      institution_name_alternative: "<%= manuscript.institution.try(:name_alt) %>",
      institution_city: "<%= manuscript.institution.try(:location).try(:city) %>",
      institution_city_alt: "<%= manuscript.institution.try(:location).try(:city_alt) %>",
      institution_region: "<%= manuscript.institution.try(:location).try(:region) %>",
      institution_region_alt: "<%= manuscript.institution.try(:location).try(:region_alt) %>",
      institution_country: "<%= manuscript.institution.try(:location).try(:country) %>",
      institution_diocese: "<%= manuscript.institution.try(:location).try(:diocese) %>",
      institution_diocese_alt: "<%= manuscript.institution.try(:location).try(:diocese_alt) %>",

      genesis_institution_id: "<%= manuscript.genesis_institution_id %>",
      genesis_institution_name: "<%= manuscript.genesis_institution.try(:name) %>",
      genesis_institution_name_alternative: "<%= manuscript.genesis_institution.try(:name_alt) %>",

      genesis_location_id: "<%= manuscript.genesis_location_id %>",
      city: "<%= manuscript.genesis_location.try(:city) %>",
      city_alt: "<%= manuscript.genesis_location.try(:city_alt) %>",
      region: "<%= manuscript.genesis_location.try(:region) %>",
      region_alt: "<%= manuscript.genesis_location.try(:region_alt) %>",
      country: "<%= manuscript.genesis_location.try(:country) %>",
      diocese: "<%= manuscript.genesis_location.try(:diocese) %>",
      diocese_alt: "<%= manuscript.genesis_location.try(:diocese_alt) %>",

      religious_order_id: "<%= manuscript.genesis_religious_order_id %>",
      religious_order_name: "<%= manuscript.genesis_religious_order.try(:order_name) %>",
      religious_order_abbreviation: "<%= manuscript.genesis_religious_order.try(:abbreviation) %>",

      scribe_names: <%= manuscript.scribes.map(&:full_name).to_json.html_safe %>,
      scribe_ids: <%= manuscript.scribes.map(&:id).to_json.html_safe %>,

      correspondent_names: <%= manuscript.correspondents.map(&:full_name).to_json.html_safe %>,
      correspondent_ids: <%= manuscript.correspondents.map(&:id).to_json.html_safe %>,

      transcriber_names: <%= manuscript.transcribers.map(&:full_name).to_json.html_safe %>,
      transcriber_ids: <%= manuscript.transcribers.map(&:id).to_json.html_safe %>,

      compiler_names: <%= manuscript.compilers.map(&:full_name).to_json.html_safe %>,
      compiler_ids: <%= manuscript.compilers.map(&:id).to_json.html_safe %>,

      shelfmark: "<%= manuscript.shelfmark.html_safe %>",
      old_shelfmark: "<%= manuscript.old_shelfmark.html_safe  %>",
      material: "<%= manuscript.material.html_safe  %>",
      dimensions: "<%= manuscript.dimensions.html_safe %>",
      leaf_page_no: "<%= manuscript.leaf_page_no %>",
      date_from: "<%= manuscript.date_from.html_safe  %>",
      date_to: "<%= manuscript.date_to.html_safe  %>",
      specific_date: "<%= manuscript.specific_date.html_safe %>",
      content_type: `<%= manuscript.content_type.html_safe %>`,
      notes: `<%= manuscript.notes.html_safe  %>`,
      languages: <%= manuscript.languages.pluck(:language_name).to_json.html_safe %>,
      links: { show: "<%= manuscript_path(manuscript) %>", edit: "<%= edit_manuscript_path(manuscript) %>", delete_btn: 'delete_<%= manuscript.id %>' }
    },
    <% end %>
    ];

    const gridOptions = {
      columnDefs: columnDefs,
      defaultColDef: defaultColDef,
      rowData: rowData,
      onCellValueChanged: onCellValueChanged,
      sideBar: 'columns',
    };

    function numberSort(num1, num2){
      return num1 - num2;
    };

    function onCellValueChanged(event){
      saveChange(event.data.id, event.data);
    }

    function onFilterTextBoxChanged() {
      gridOptions.api.setQuickFilter(
        document.getElementById('filter-text-box').value
      );
    }

    function saveChange(id, data){
      var my_data = {};
      my_data.in_grid = "1";
      my_data.authenticity_token = "<%= form_authenticity_token %>";
      my_data.manuscript = data;
      $.ajax({
        url: "/manuscripts/"+id,
        type: 'PUT',
        data: JSON.stringify(my_data),
        contentType: 'application/json',
        success: function(data) {
          console.log('result received:');
          console.log(data);
        }
      });
    };

    const eGridDiv = document.querySelector('#manuscripts_grid');
    new agGrid.Grid(eGridDiv, gridOptions);
    var columnToolPanel = gridOptions.api.getToolPanelInstance('columns');
    columnToolPanel.collapseColumnGroups();
    gridOptions.columnApi.autoSizeColumns(['census_no', 'status']);

  </script>
